{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\lexrojas-react\\\\src\\\\components\\\\GetRegistros.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetRegistros = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/registros');\n      const jsonData = await response.json();\n      setData(jsonData);\n    } catch (error) {\n      console.log('Error fetching data:', error);\n    }\n  };\n  if (data) {\n    return data.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: o.id_registro,\n      children: [\" \", o.registro_descripcion, \" \"]\n    }, o.id_registro, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this));\n  }\n  ;\n};\n_s(GetRegistros, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = GetRegistros;\nexport default GetRegistros;\nvar _c;\n$RefreshReg$(_c, \"GetRegistros\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","GetRegistros","_s","data","setData","fetchData","response","fetch","jsonData","json","error","console","log","map","o","value","id_registro","children","registro_descripcion","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/GitHub/lexrojas-react/src/components/GetRegistros.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst GetRegistros = () => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/registros');\r\n      const jsonData = await response.json();\r\n      setData(jsonData);\r\n    } catch (error) {\r\n      console.log('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  if (data) { return (\r\n      (data.map((o) => (\r\n          <option key={o.id_registro} value={o.id_registro}> {o.registro_descripcion} </option>\r\n        ))\r\n      )\r\n  )};\r\n};\r\n\r\nexport default GetRegistros;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdQ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAC/D,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACtCL,OAAO,CAACI,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,IAAIP,IAAI,EAAE;IAAE,OACPA,IAAI,CAACU,GAAG,CAAEC,CAAC,iBACRd,OAAA;MAA4Be,KAAK,EAAED,CAAC,CAACE,WAAY;MAAAC,QAAA,GAAC,GAAC,EAACH,CAAC,CAACI,oBAAoB,EAAC,GAAC;IAAA,GAA/DJ,CAAC,CAACE,WAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0D,CACrF,CAAC;EAEP;EAAC;AACJ,CAAC;AAACpB,EAAA,CAvBID,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAyBlB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}